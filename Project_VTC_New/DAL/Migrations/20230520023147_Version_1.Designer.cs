// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(CoffeeShopDbContext))]
    [Migration("20230520023147_Version_1")]
    partial class Version_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DAL.Entities.AccountAdmin", b =>
                {
                    b.Property<int>("Admin_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Admin_no");

                    b.ToTable("AccountAdmin");
                });

            modelBuilder.Entity("DAL.Entities.AccountEmployee", b =>
                {
                    b.Property<int>("Emp_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Emp_st")
                        .HasColumnType("int");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Emp_no");

                    b.ToTable("AccountEmployee");
                });

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.Property<int>("Cate_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cate_Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Cate_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Cate_no");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DAL.Entities.Customer", b =>
                {
                    b.Property<int>("Cus_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cus_st")
                        .HasColumnType("int");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("Cus_no");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DAL.Entities.Employee", b =>
                {
                    b.Property<int>("Emp_no")
                        .HasColumnType("int");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("Emp_no");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.Property<int>("Order_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Cus_no")
                        .HasColumnType("int");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Emp_no")
                        .HasColumnType("int");

                    b.Property<int>("Order_st")
                        .HasColumnType("int");

                    b.Property<int?>("Payment")
                        .HasColumnType("int");

                    b.Property<int>("Table_no")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Order_no");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DAL.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Order_no")
                        .HasColumnType("int");

                    b.Property<int>("Prod_no")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Order_no", "Prod_no");

                    b.HasIndex("Prod_no");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.Property<int>("Prod_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cate_no")
                        .HasColumnType("int");

                    b.Property<string>("Prod_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Prod_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Prod_st")
                        .HasColumnType("int");

                    b.HasKey("Prod_no");

                    b.HasIndex("Cate_no");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DAL.Entities.Salary", b =>
                {
                    b.Property<int>("Emp_no")
                        .HasColumnType("int");

                    b.Property<float>("Coefficients_salary")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeeEmp_no")
                        .HasColumnType("int");

                    b.Property<float>("TotalSalary")
                        .HasColumnType("float");

                    b.Property<float>("WorkDay")
                        .HasColumnType("float");

                    b.HasKey("Emp_no");

                    b.HasIndex("EmployeeEmp_no");

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("DAL.Entities.Table", b =>
                {
                    b.Property<int>("Table_no")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Table_Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Table_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Table_st")
                        .HasColumnType("int");

                    b.HasKey("Table_no");

                    b.ToTable("TableSeat");
                });

            modelBuilder.Entity("DAL.Entities.Employee", b =>
                {
                    b.HasOne("DAL.Entities.AccountEmployee", "AccountEmployee")
                        .WithMany()
                        .HasForeignKey("Emp_no")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountEmployee");
                });

            modelBuilder.Entity("DAL.Entities.OrderDetail", b =>
                {
                    b.HasOne("DAL.Entities.Order", "Order")
                        .WithMany("Details")
                        .HasForeignKey("Order_no")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Prod_no")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.HasOne("DAL.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Cate_no")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Entities.Salary", b =>
                {
                    b.HasOne("DAL.Entities.AccountEmployee", "accountEmployee")
                        .WithMany()
                        .HasForeignKey("Emp_no")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Employee", null)
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeEmp_no");

                    b.Navigation("accountEmployee");
                });

            modelBuilder.Entity("DAL.Entities.Employee", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
